<section id="soundObjects">
  <title>Sound Objects</title>

  <para>
    Sound Objects are objects on the score timeline that are primarily
    responsible for generating score data.
  </para>

  <simplesect>
    <title>Common Properties</title>

    <para>The following are properties that all SoundObjects share.</para>

    <variablelist>
      <title>Common Properties</title>

      <varlistentry>
        <term>Name</term>
        <listitem>
          <para>Name of the Soundobject</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Subjective Duration</term>
        <listitem>
          <para>
            The duration of the soundObject on the timeline (versus the duration
            of the generated score within the soundObject, which may be 
            different). How the duration relates to the generated score
            contents is controlled by the "Time Behavior" property.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>End Time</term>
        <listitem>
          <para>
            Read-Only property that shows the end-time of the soundObject
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Time Behavior</term>
        <listitem>
          <para>
            Selects how subjective time should be used on a soundObject. Options
            are:
          </para>

          <orderedlist>

            <listitem>
              <para>
                Scale - The default option, stretches generated score to last
                the duration of the soundObject
              </para>
            </listitem>

            <listitem>
              <para>
                Repeat - repeats generated score up to the duration of the
                soundObject
              </para>
            </listitem>

            <listitem>
              <para>
                None - Passes the score data as-is (When using Time-Behavior of
                None, width of soundObject no longer visually corresponds to
                duration of the soundObject's score.)
              </para>

            </listitem>

          </orderedlist>

        </listitem>

      </varlistentry>

    </variablelist>
  </simplesect>

  <simplesect>
    <title>About Note Generation</title>

    <para>Sound Objects generate notes in the following manner:</para>

    <itemizedlist>

      <listitem>
        <para>SoundObject generates initial notes</para>
      </listitem>

      <listitem>
        <para>NoteProcessors are applied to the generated notes</para>
      </listitem>

      <listitem>
        <para>Time Behavior is applied to the notes</para>
      </listitem>

    </itemizedlist>

  </simplesect>

  <simplesect>
    <title>Partial Object Rendering</title>

    <para>
    	When using a render start time other than 0.0, how soundObjects
    	contribute notes depends on if they support partial object
    	rendering. Normally, notes from all soundObjects which can
    	possibly contribute notes to the render (taking into account
    	render start and render end) are gathered and then if any notes
    	start before the render start time they are discarded as there
    	is no way to start in the middle of a note and to know exactly
    	that it sounds as it should as blue's timeline only knows about
    	notes and not how those instruments render.
    </para>
    
    <para>
    	However, there are certain cases where blue soundObjects *can*
    	know about the instrument that the notes are generated for and can 
    	therefore do partial object rendering to start in the middle of a note.
    	This the is the case for those soundObjects which generate their own 
    	instruments, such as the AudioFile SoundObject, FrozenObject, the 
    	LineObject, and the ZakLineObject.  For those soundObjects, if render is
    	started within the middle of one of those, you will hear audio and have
    	control signals generated from the correct place and time.
    </para>
    
    
  </simplesect>

  &audioFileObject;
  &ceciliaModule;
  &comment;
  &clojureObject;
  &external;
  &genericScore;
  &instance;
  &jmask;
  &lineObject;
  &objectBuilder;
  &patternObject;
  &pianoRoll;
  &polyObject;
  &pythonObject;
  &javaScriptObject;
  &sound;
  &tracker;
  &zakLineObject;

</section>
