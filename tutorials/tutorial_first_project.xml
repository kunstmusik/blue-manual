<article id="firstProject">
    <articleinfo>
        <author>
            <firstname>Andr&eacute;s</firstname>
            <surname>Cabrera</surname>
        </author>
        <pubdate>2004</pubdate>
        <title>Your First Project</title>
        <titleabbrev>Your First Project</titleabbrev>
        <revhistory>
            <revision>
                <revnumber>1.1</revnumber>
                <date>2005.07.15</date>
                <revremark>Updated for new Instrument Library</revremark>
            </revision>
            <revision>
                <revnumber>1.0</revnumber>
                <date>2004.11.30</date>
                <revremark>First version of article.</revremark>
            </revision>
        </revhistory>
    </articleinfo>

<!--<section>
<title>Using Blue</title> -->

    <para> This tutorial will explain how to start using blue. It assumes a little
knowledge of csound, but not too much (If you don't know csound, understanding
Dr. Boulanger's toots at <ulink url="http://www.csounds.com/toots/index.html"/>
should be enough to get you through this tutorial).</para>

    <para>
Run blue using the appropriate script provided in the blue/bin directory. Use the .bat file for windows, the .sh for linux and the .command file for Mac OS X. If blue is not running check the section 'Installation' on the blue documentation.</para>

    <para>
We will first create an instrument. Go to the orchestra tab, and click
on the [+] button under the 'Orchestra' title. From the pop-menu select
Add Instrument>GenericInstrument.
</para>


    <screenshot>
        <screeninfo>Instrument Library</screeninfo>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/tutorial_first_project/tutA_1.jpg" format="JPG" />
            </imageobject>
            <textobject>
                <phrase>Instrument Library</phrase>
            </textobject>
            <caption>
                <para>Instrument Library</para>
            </caption>
        </mediaobject>
    </screenshot>

    <para>You will want to choose GenericInstrument when you want to create an ordinary csound instrument. An empty 'untitled' instrument iFs created. To rename an instrument, select it, press F2 and type the new name (e.g. 'Oscillator').</para>

    <para> The instrument library on the left panel is where instruments are saved for use in any blue project. To place an instrument in the library so it is always available, drag it to the Instrument Library folder.</para>

    <screenshot>
        <screeninfo>Assigning Instrument to Arrangement</screeninfo>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/tutorial_first_project/tutA_2.jpg" format="JPG" />
            </imageobject>
            <textobject>
                <phrase>Assigning Instrument to Arrangement</phrase>
            </textobject>
            <caption>
                <para>Assigning Instrument to Arrangement</para>
            </caption>
        </mediaobject>
    </screenshot>

    <para>
The '&gt;' button brings an instrument from the library to the project. To
remove an instrument from the project, select it and press '-'.</para>

    <para>
It is important to understand that instruments which are in the Instrument Library but not the Arrangement are not available for use in the csd because they haven't been assigned an instrument id (number or string, if used as a Csound named instrument).</para>

    <para>
Now that the instrument is there, we need to define how it will sound.
We use ordinary csound code to do this (since it is a
GenericInstrument). The code for the instrument is written on the lower
right panel, inside the Instrument Text tab within Instrument Editor
tab. Make sure you type the code in this tab, and not the 'Global
Orchestra' or 'Global Score' tabs.</para>

    <para>
We will create a simple oscillator with an amplitude envelope like this:</para>

    <programlisting>
kenv linen 10000,1,p3,1
asig oscil kenv, 440, gitab
outs asig,asig
</programlisting>

    <screenshot>
        <screeninfo>Editing Instrument</screeninfo>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/tutorial_first_project/tutA_3.jpg" format="JPG" />
            </imageobject>
            <textobject>
                <phrase>Editing Instrument</phrase>
            </textobject>
            <caption>
                <para>Editing Instrument</para>
            </caption>
        </mediaobject>
    </screenshot>

    <para>
Try using blue's autocompletion feature like this: type 'line' and press ctrl-Space Bar. A pop-up window will display all known opcodes that begin with line. Once you select 'linen' you will have a template to fill in the apropriate values.</para>

    <para>
If you need to remember the syntax for an opcode, place the cursor over it and press Shift-F1. If you have set correctly the Csound Documentation Directory, the html help for the opcode will be displayed if available. See the section 'Installing blue' on the main blue documentation (F1) for details on setting up the C.D.R.</para>

    <para>
To define the oscillator table we will use ftgen, and place the following code in the Global Orc tab for the instrument:</para>

    <programlisting>
gitab ftgen 1,0,1024,10,1
</programlisting>

    <screenshot>
        <screeninfo>Adding an FTable for the Instrument</screeninfo>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/tutorial_first_project/tutA_4.jpg" format="JPG" />
            </imageobject>
            <textobject>
                <phrase>Adding an FTable for the Instrument</phrase>
            </textobject>
            <caption>
                <para>Adding an FTable for the Instrument</para>
            </caption>
        </mediaobject>
    </screenshot>


    <para>
Placing things like tables in the global tabs inside the instruments makes it very simple to share instruments between projects, because the required initialization and tables travel with the instrument.</para>

    <para>
You can preview the csd file to be generated by using Ctrl-Shift-G or Project>Generate CSD to screen. See how the ftgen opcode that was placed in the Global Orc tab is placed above the instrument definition.</para>

    <para>
Now that our instrument is ready we will create notes for it. This is done by going the Score tab (You can use ctrl-1).</para>

    <para>
The score tab contains horizontal 'tracks' called Sound Layers. On sound layers you place objects which generate notes that instance the instruments.</para>

    <para>
First we will give a name to our sound layer. Simply click on the black area below 'Name' and type the name (e.g. 'Notes').</para>

    <para>
To create a note, go to the timeline on the right, and in line with the sound layer, right-click, and select 'Add New GenericScore'.</para>

    <screenshot>
        <screeninfo>Adding a Generic Score</screeninfo>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/tutorial_first_project/tutA_5.jpg" format="JPG" />
            </imageobject>
            <textobject>
                <phrase>Adding a Generic Score</phrase>
            </textobject>
            <caption>
                <para>Adding a Generic Score</para>
            </caption>
        </mediaobject>
    </screenshot>

    <para>
GenericScore allows ordinary csound code to be used, in this case things like 'i' statements. When you click on the genericScore that has been created, the bottom panel will show the contents of the object. You can add as many 'i' statements as you need inside a genericScore Object.
We want our score to generate a note for instrument 1, our 'oscillator' instrument. We'll use the simple:</para>

    <programlisting>
i 1 0 1
</programlisting>

    <screenshot>
        <screeninfo>Editing a Generic Score</screeninfo>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/tutorial_first_project/tutA_6.jpg" format="JPG" />
            </imageobject>
            <textobject>
                <phrase>Editing a Generic Score</phrase>
            </textobject>
            <caption>
                <para>Editing a Generic Score</para>
            </caption>
        </mediaobject>
    </screenshot>


    <para>
You can preview how the object will generate the csound score by pressing the [ t e s t ] button on the right side of the panel. Notice that the start time is the place where the object was placed on the timeline, but the duration of the note is 2 seconds instead of the 1 second we typed. By default blue creates genericScore objects set to 'scale' the notes inside it. Try dragging the right corner of the object to make it longer, and try the [test] button again. The duration of the note now scales to the size of the object. Don't forget that when multiple notes are inside an object, it is the note with the longest duration that scales to the size of the object and the rest of the notes are scaled proportionally.</para>

    <para>
Now let's create a second note a few seconds later. First zoom out by pressing the '-' button on the right endof the horizontal scroll bar. Now select the genericScore we have created and press ctrl-C (or command-C on Mac), and right click where you want to paste the copy and select 'Paste'. You should now have two objects like in figure 7.</para>

    <screenshot>
        <screeninfo>Copying SoundObjects</screeninfo>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/tutorial_first_project/tutA_7.jpg" format="JPG" />
            </imageobject>
            <textobject>
                <phrase>Copying SoundObjects</phrase>
            </textobject>
            <caption>
                <para>Copying SoundObjects</para>
            </caption>
        </mediaobject>
    </screenshot>

    <para>
You can use the snap feature to move the objects by fixed values. press the [...] button on the upper right corner of the timeline to open the snap properties. Enable snap to 1 second (Fig. 8). You can also configure the timeline time display to show numbers instead of time. This is useful if you set the tempo using a 't' statement, and want blue to display numbers instead of time values.</para>

    <screenshot>
        <screeninfo>Setting Timeline Options</screeninfo>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/tutorial_first_project/tutA_8.jpg" format="JPG" />
            </imageobject>
            <textobject>
                <phrase>Setting Timeline Options</phrase>
            </textobject>
            <caption>
                <para>Setting Timeline Options</para>
            </caption>
        </mediaobject>
    </screenshot>

    <para>
Now move and shape the objects so the first starts at 0, with a duration of 5 seconds, and the second starts at 10, again with a duration of 5. It's always good to check using [test] to make sure things are how you want them to be.</para>

    <para>
Now to produce sound, we will first check the global settings. Go to the 'project properties' tab by pressing ctrl-6. Here you can set the project's sr, kr and nchnls, and determine the csound executable and flags.</para>

    <para>
The main thing to set here is the command line to call csound. The command line
depends entirely on your setup and operating system. In Linux, csound is usually located in an executable directory, so just using 'csound' works for most setups. In Windows, you may need to specify the full path for the location of the csound executable. Note that after the executable name you can add flags to determine how csound will process the csd generated by blue. For example, you may want to use a real-time flag for this project, like -o dac0 or -+P depending on your system.</para>

    <para>
An important thing to note here is that when using the play button, the flags used are the ones inside te command line. The &lt;CsOptions&gt; below only affect the generation of external csd's using the 'Generate CSD to screen/file' commands from the menu.</para>

    <para>
When you are ready to compile your csd, press the play button on the upper right corner or press F9. If you set the output for realtime, you should hear the tones produced by the oscillator.</para>



<!-- </section> -->

</article>